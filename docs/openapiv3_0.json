{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.1",
    "title": "OGC Compliant IUDX Resource Server",
    "description": "OGC compliant Features and Common API definitions.\nIncludes Schema and Response Objects.",
    "contact": {
      "name": "India Urban Data eXchange (IUDX)",
      "email": "info@iudx.org.in",
      "url": "https://iudx.org.in"
    },
    "license": {
      "url": "https://opensource.org/license/mit/",
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://ogc.iudx.io",
      "description": "OGC-Resource-Server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Landing page",
        "description": "Landing page for the OGC compliant Resource Server.\nIt provides links to the API definition (link relations service-desc and service-doc), the Conformance declaration (path /conformance, link relation conformance), and the Feature Collections (path /collections, link relation data).\n",
        "operationId": "getLandingPage",
        "responses": {
          "200": {
            "description": "Successful query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "links"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "title": "Administrative Boundaries of India",
                      "description": "Information on Indian administrative boundaries.",
                      "links": [
                        {
                          "href": "https://ogc.iudx.io/",
                          "rel": "self",
                          "type": "application/json",
                          "title": "this document"
                        },
                        {
                          "href": "http://ogc.iudx.io/api",
                          "rel": "service-desc",
                          "type": "application/vnd.oai.openapi+json;version=3.0",
                          "title": "the API definition"
                        },
                        {
                          "href": "https://ogc.iudx.io/conformance",
                          "rel": "conformance",
                          "type": "application/json",
                          "title": "OGC API conformance classes implemented by this server"
                        },
                        {
                          "href": "https://ogc.iudx.io/collections",
                          "rel": "data",
                          "type": "application/json",
                          "title": "Information about the feature collections"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "code": "Bad Request",
                      "description": "Missing/Invalid parameters"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://ogc.iudx.io",
            "description": "OGC-Resource-Server"
          }
        ]
      }
    },
    "/conformance": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "information about specifications that the API Server conforms to",
        "description": "A list of all conformance classes specified as per OGC standard that the\nserver conforms to.\nTo support \"generic\" clients that want to access multiple\nOGC API Features implementations - and not \"just\" a specific\nAPI / server, the server declares the conformance classes it implements and conforms to.",
        "operationId": "getConformanceClasses",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConformanceDeclaration"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "servers": [
          {
            "url": "https://ogc.iudx.io",
            "description": "OGC-Resource-Server"
          }
        ]
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "the feature collections in the dataset",
        "description": "It will fetch the list of feature collections to DX Data Consumers based on the required format with default limit and offset values supplied. This API provides a birds-eye-view for all avialable Feature Collections. The dataset is organized as one or more feature collections. This resource provides information about and access to the collections.\nThe response contains the list of collections. For each collection, a link to the items in the collection (path `/collections/{collectionId}/items`, link relation `items`) as well as key information about the collection. This information includes-\n* A local identifier for the collection that is unique for the dataset.\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude). \n* An optional title and description for the collection.\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data. \n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').",
        "operationId": "getCollections",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Collections"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "servers": [
          {
            "url": "https://ogc.iudx.io",
            "description": "OGC-Resource-Server"
          }
        ]
      }
    },
    "/collections/{collectionId}": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "describe the feature collection with id `collectionId`",
        "description": "The response contains a link to the items in the collection (path `/collections/{collectionId}/items`, link relation `items`) as well as key information about the collection. This information includes-\n* A local identifier for the collection that is unique for the dataset.\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude). \n* An optional title and description for the collection.\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data. \n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').",
        "operationId": "describeCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/collectionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Collection"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "servers": [
          {
            "url": "https://ogc.iudx.io",
            "description": "OGC-Resource-Server"
          }
        ]
      }
    },
    "/collections/{collectionId}/items": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "fetch features",
        "description": "Fetch features of the feature collection with id `collectionId`.\n\nEvery feature in a dataset belongs to a collection. A dataset may\nconsist of multiple feature collections. A feature collection is often a\ncollection of features of a similar type, based on a common schema.\n\nThe `bbox` and `datetime` parameter can be used to select only a\nsubset of the features in the collection (the features that are in the\nbounding box or time interval). The `bbox` parameter matches all features\nin the collection that are not associated with a location, too. The\n`datetime` parameter matches all features in the collection that are\nnot associated with a time stamp or interval, too.\n\nThe `limit` and `offset` parameters may be used to control the subset of the\nselected features that should be returned in the response, the page size.\nEach page may include information about the number of selected and\nreturned features (`numberMatched` and `numberReturned`).\n\nUse content negotiation to request for GeoJSON.",
        "operationId": "getFeatures",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/bbox"
          },
          {
            "$ref": "#/components/parameters/datetime"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/collectionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Features"
          },
          "400": {
            "$ref": "#/components/responses/InvalidParameter"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "servers": [
          {
            "url": "https://ogc.iudx.io",
            "description": "OGC-Resource-Server"
          }
        ]
      }
    },
    "/collections/{collectionId}/items/{featureId}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "fetch a single feature",
        "description": "Fetch the feature with id `featureId` in the feature collection\nwith id `collectionId`.\n\nUse content negotiation to request HTML or GeoJSON.",
        "operationId": "getFeature",
        "parameters": [
          {
            "$ref": "#/components/parameters/collectionId"
          },
          {
            "$ref": "#/components/parameters/featureId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Feature"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "servers": [
          {
            "url": "https://ogc.iudx.io",
            "description": "OGC-Resource-Server"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Capabilities",
      "description": "Essential characteristics of OGC APIs"
    },
    {
      "name": "Data",
      "description": "Access to data belonging to a collection (features)"
    }
  ],
  "components": {
    "parameters": {
      "bbox": {
        "name": "bbox",
        "in": "query",
        "description": "Only features that have a geometry that intersects the bounding box are selected.\nThe bounding box is provided as four or six numbers, depending on whether the\ncoordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Minimum value, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Maximum value, coordinate axis 3 (optional)\n\nIf the value consists of four numbers, the coordinate reference system is\nWGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)\nunless a different coordinate reference system is specified in the parameter `bbox-crs`.\n\nIf the value consists of six numbers, the coordinate reference system is WGS 84\nlongitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)\nunless a different coordinate reference system is specified in the parameter `bbox-crs`.\n\nThe query parameter `bbox-crs` is specified in OGC API - Features - Part 2: Coordinate\nReference Systems by Reference.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude.\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box edge).\n\nIf the vertical axis is included, the third and the sixth number are\nthe bottom and the top of the 3-dimensional bounding box.\n\nIf a feature has multiple spatial geometry properties, it is the decision of the\nserver whether only a single spatial geometry property is used to determine\nthe extent or all relevant geometries.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "datetime": {
        "name": "datetime",
        "in": "query",
        "description": "Either a date-time or an interval. Date and time expressions adhere to RFC 3339.\nIntervals may be bounded or half-bounded (double-dots at start or end).\n\nExamples:\n\n* A date-time: \"2018-02-12T23:20:50Z\"\n* A bounded interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n* Half-bounded intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly features that have a temporal property that intersects the value of\n`datetime` are selected.\n\nIf a feature has multiple temporal properties, it is the decision of the\nserver whether only a single temporal property is used to determine\nthe extent or all relevant temporal properties.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "The optional limit parameter limits the number of items that are presented in the response document.\n\nOnly items are counted that are on the first level of the collection in the response document.\nNested objects contained within the explicitly requested items shall not be counted.\n\nMinimum = 1. Maximum = 10000. Default = 10.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000,
          "default": 10
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "OGC Resource server also offers way to paginate the result for queries. \nIf a query returns large number of records then user can use additional parameters in query parameters to limit numbers of records \nto be returned.\n\nMinimum = 0. Maximum = 1000. Default = 10.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1000,
          "default": 10
        }
      },
      "collectionId": {
        "name": "collectionId",
        "in": "path",
        "description": "local identifier of a collection",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "featureId": {
        "name": "featureId",
        "in": "path",
        "description": "local identifier of a feature",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "LandingPage": {
        "description": "The landing page provides links to the API definition\n(link relations `service-desc` and `service-doc`),\nthe Conformance declaration (path `/conformance`,\nlink relation `conformance`), and the Feature\nCollections (path `/collections`, link relation\n`data`).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/landingPage"
            },
            "examples": {
              "default": {
                "value": {
                  "title": "OGC Compliant IUDX Geospatial Resource Server Landing Page",
                  "description": "This landing page provides all the links as per the OGC compliance in JSON format",
                  "links": [
                    {
                      "href": "https://ogc.iudx.io/",
                      "rel": "self",
                      "type": "application/json",
                      "title": "this document"
                    },
                    {
                      "href": "https://ogc.iudx.io/api",
                      "rel": "service-desc",
                      "type": "application/vnd.oai.openapi+json;version=3.0",
                      "title": "the API definition"
                    },
                    {
                      "href": "https://ogc.iudx.io/conformance",
                      "rel": "conformance",
                      "type": "application/json",
                      "title": "OGC API conformance classes implemented by this server"
                    },
                    {
                      "href": "https://ogc.iudx.io/collections",
                      "rel": "data",
                      "type": "application/json",
                      "title": "Information about the feature collections"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "ConformanceDeclaration": {
        "description": "The URIs of all conformance classes supported by the server.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/confClasses"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "conformsTo": [
                    "http://www.opengis.net/spec/ogcapi-common-1/1.0/req/json",
                    "http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landing-page",
                    "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core",
                    "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30",
                    "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"
                  ]
                }
              }
            }
          }
        }
      },
      "Collections": {
        "description": "The feature collections shared by this API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/collections"
            },
            "examples": {
              "default": {
                "value": {
                  "extent": {
                    "spatial": {
                      "geometry": {
                        "type": "Point",
                        "coordinates": [
                          91.27129661478112,
                          23.828385729333068
                        ]
                      }
                    }
                  },
                  "temporal": {
                    "interval": [
                      "2020-11-03T15:12:08+05:30",
                      null
                    ]
                  },
                  "links": [
                    {
                      "href": "https://ogc.iudx.io/collections",
                      "rel": "self",
                      "type": "application/json",
                      "title": "this document"
                    }
                  ],
                  "collections": [
                    {
                      "id": "fd6ef7c5-b18c-48e6-94e3-81037706763d",
                      "title": "Indian District Headquarters",
                      "description": "Geographic information of district headquarters in India",
                      "links": [
                        {
                          "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items",
                          "rel": "items",
                          "type": "application/geo+json",
                          "title": "Indian District Headquarters"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Collection": {
        "description": "Information about the feature collection with id `collectionId`.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/collection"
            },
            "examples": {
              "collection": {
                "value": {
                  "extent": {
                    "spatial": {
                      "geometry": {
                        "type": "Point",
                        "coordinates": [
                          91.27129661478112,
                          23.828385729333068
                        ]
                      }
                    },
                    "temporal": {
                      "interval": [
                        "2020-11-03T15:12:08+05:30",
                        "null"
                      ]
                    }
                  },
                  "id": "fd6ef7c5-b18c-48e6-94e3-81037706763d",
                  "itemType": "feature",
                  "title": "Indian District Headquarters",
                  "description": "Geographic information of district headquarters in India",
                  "links": [
                    {
                      "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items",
                      "rel": "items",
                      "type": "application/geo+json",
                      "title": "Indian District Headquarters"
                    },
                    {
                      "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "Indian District Headquarters"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Features": {
        "description": "The response is a document consisting of features in the collection.\nThe features included in the response are determined by the server\nbased on the query parameters of the request. To support access to\nlarger collections without overloading the client, the API supports\npaged access using `limit` and `offset` paramters.",
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/featureCollectionGeoJSON"
            },
            "examples": {
              "default": {
                "value": {
                  "type": "FeatureCollection",
                  "links": [
                    {
                      "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "this document"
                    },
                    {
                      "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items?offset=10&limit=2",
                      "rel": "next",
                      "type": "application/geo+json",
                      "title": "next page"
                    }
                  ],
                  "numberMatched": 123,
                  "numberReturned": 2,
                  "features": [
                    {
                      "type": "Feature",
                      "id": "4f449c78-3233-4c07-824c-08f7d45cee0e",
                      "geometry": {
                        "type": "Point",
                        "coordinates": [
                          76.787052042,
                          30.37598763
                        ]
                      },
                      "properties": {
                        "hq": "AMBALA",
                        "state": "HARYANA",
                        "timestamp": "2023-07-25 07:22:36 UTC"
                      }
                    },
                    {
                      "type": "Feature",
                      "id": "3f449c78-3233-4c07-824c-08f7d45cee03",
                      "geometry": {
                        "type": "Point",
                        "coordinates": [
                          76.787052042,
                          30.37598763
                        ]
                      },
                      "properties": {
                        "hq": "HYDERABAD",
                        "state": "TELENGANA",
                        "timestamp": "2023-07-25 07:22:36 UTC"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Feature": {
        "description": "fetch the feature with id `featureId` in the feature collection\nwith id `collectionId`",
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/featureGeoJSON"
            },
            "examples": {
              "default": {
                "value": {
                  "type": "Feature",
                  "links": [
                    {
                      "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items/4f449c78-3233-4c07-824c-08f7d45cee0e",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "this document"
                    },
                    {
                      "href": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d",
                      "rel": "collection",
                      "type": "application/geo+json",
                      "title": "the collection document"
                    }
                  ],
                  "id": "4f449c78-3233-4c07-824c-08f7d45cee0e",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      76.787052042,
                      30.37598763
                    ]
                  },
                  "properties": {
                    "hq": "AMBALA",
                    "state": "HARYANA",
                    "datetime": "2023-07-25 07:22:36 UTC"
                  }
                }
              }
            }
          }
        }
      },
      "InvalidParameter": {
        "description": "A query parameter has an invalid value.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/exception400"
            }
          }
        }
      },
      "NotFound": {
        "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
      },
      "NotAcceptable": {
        "description": "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
      },
      "ServerError": {
        "description": "A server error occurred.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/exception500"
            }
          }
        }
      }
    },
    "schemas": {
      "landingPage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "href": {
                  "type": "string"
                },
                "rel": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            }
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "links"
        ],
        "example": {
          "title": "OGC Compliant IUDX Geospatial Resource Server Landing Page",
          "description": "This landing page provides all the links as per the OGC compliance in JSON format",
          "links": [
            {
              "href": "https://ogc.iudx.io/",
              "rel": "self",
              "type": "application/json",
              "title": "this document"
            },
            {
              "href": "https://ogc.iudx.io/api",
              "rel": "service-desc",
              "type": "application/vnd.oai.openapi+json;version=3.0",
              "title": "the API definition"
            },
            {
              "href": "https://ogc.iudx.io/conformance",
              "rel": "conformance",
              "type": "application/json",
              "title": "OGC API conformance classes implemented by this server"
            },
            {
              "href": "https://ogc.iudx.io/collections",
              "rel": "data",
              "type": "application/json",
              "title": "Information about the feature collections"
            }
          ]
        }
      },
      "confClasses": {
        "type": "object",
        "properties": {
          "conformsTo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "conformsTo"
        ],
        "example": {
          "conformsTo": [
            "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core",
            "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30",
            "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"
          ]
        }
      },
      "collections": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/link"
            }
          },
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/collection"
            }
          }
        },
        "required": [
          "links",
          "collections"
        ]
      },
      "link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "example": "https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d"
          },
          "rel": {
            "type": "string",
            "example": "alternate"
          },
          "type": {
            "type": "string",
            "example": "application/geo+json"
          },
          "hreflang": {
            "type": "string",
            "example": "en"
          },
          "title": {
            "type": "string",
            "example": "Indian District Headquarters"
          },
          "length": {
            "type": "integer"
          }
        },
        "required": [
          "href"
        ]
      },
      "collection": {
        "type": "object",
        "properties": {
          "extent": {
            "type": "object",
            "properties": {
              "spatial": {
                "type": "object",
                "properties": {
                  "bbox": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "float"
                      }
                    }
                  }
                }
              },
              "temporal": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "itemType": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/link"
            }
          }
        },
        "required": [
          "id",
          "links"
        ]
      },
      "featureCollectionGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "FeatureCollection"
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/featureGeoJSON"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/link"
            }
          },
          "numberMatched": {
            "$ref": "#/components/schemas/numberMatched"
          },
          "numberReturned": {
            "$ref": "#/components/schemas/numberReturned"
          }
        },
        "required": [
          "type",
          "features"
        ]
      },
      "featureGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Feature"
            ]
          },
          "geometry": {
            "$ref": "#/components/schemas/geometryGeoJSON"
          },
          "properties": {
            "type": "object"
          },
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/link"
            }
          }
        },
        "required": [
          "type",
          "geometry",
          "properties"
        ]
      },
      "geometryGeoJSON": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/pointGeoJSON"
          },
          {
            "$ref": "#/components/schemas/multipointGeoJSON"
          },
          {
            "$ref": "#/components/schemas/linestringGeoJSON"
          },
          {
            "$ref": "#/components/schemas/multilinestringGeoJSON"
          },
          {
            "$ref": "#/components/schemas/polygonGeoJSON"
          },
          {
            "$ref": "#/components/schemas/multipolygonGeoJSON"
          },
          {
            "$ref": "#/components/schemas/geometrycollectionGeoJSON"
          }
        ]
      },
      "pointGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Point"
            ]
          },
          "coordinates": {
            "type": "array",
            "minItems": 2,
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "multipointGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiPoint"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "linestringGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "LineString"
            ]
          },
          "coordinates": {
            "type": "array",
            "minItems": 2,
            "items": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "multilinestringGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiLineString"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "polygonGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Polygon"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "multipolygonGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiPolygon"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 4,
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "geometrycollectionGeoJSON": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "GeometryCollection"
            ]
          },
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/geometryGeoJSON"
            }
          }
        },
        "required": [
          "type",
          "geometries"
        ]
      },
      "numberMatched": {
        "type": "integer",
        "description": "The number of features of the feature type that match the selection\nparameters like `bbox`.",
        "minimum": 0,
        "example": 127
      },
      "numberReturned": {
        "type": "integer",
        "description": "The number of features in the feature collection.\n\nA server may omit this information in a response, if the information\nabout the number of features is not known or difficult to compute.\n\nIf the value is provided, the value shall be identical to the number\nof items in the \"features\" array.",
        "minimum": 0,
        "example": 10
      },
      "exception400": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "description"
        ],
        "example": {
          "code": "Bad Request",
          "description": "Missing/Invalid parameters"
        }
      },
      "exception500": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "description"
        ],
        "example": {
          "code": "Internal Server Error",
          "description": "Internal Server Error"
        }
      }
    }
  }
}